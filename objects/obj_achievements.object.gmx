<!--This Document is generated by GameMaker, if you edit it by hand then you do so at your own risk!-->
<object>
  <spriteName>&lt;undefined&gt;</spriteName>
  <solid>0</solid>
  <visible>-1</visible>
  <depth>0</depth>
  <persistent>0</persistent>
  <parentName>&lt;undefined&gt;</parentName>
  <maskName>&lt;undefined&gt;</maskName>
  <events>
    <event eventtype="0" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>///Initialize variables
scr_achievements_call();

mpos = 0;
mposx = 0;
mposy = 0;
xpos = 32;
ypos = 158;
ypos2 = ypos + 85;
xspacing = 152;
yspacing = 159;

desc1_x = 544;
desc2_x = desc1_x + 10;
desc1_y = 167;
desc2_y = 210;
desc3_y = 324;
desc4_y = 368;
sprite_y = 275;
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="3" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>///Move around the menu
scr_getinputs();
var movex = 0;
movex -= key_menu_left;
movex += key_menu_right;
var movey = 0;
movey -= key_menu_up;
movey += key_menu_down;

if (movey != 0)
{
    mposy += movey;
    if (mposy &lt; 0) mposy = array_height_2d(menu) - 1;
    if (mposy &gt; array_height_2d(menu) - 1) mposy = 0;
}

if (movex != 0)
{
    mposx += movex;
    if (mposx &lt; 0) mposx = array_length_2d(menu, mposy) - 1;
    if (mposx &gt; array_length_2d(menu, mposy) - 1) mposx = 0;
}


mpos = menu[mposy, mposx];

if (key_menu_confirm == 1 &amp;&amp; mpos &gt; 0) scr_achievements();
if (key_menu_deny == 1) room_goto(rm_extras);
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="8" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>if (mposy &lt; 2)
{
    ///Draw hat array
    for (var h = 0; h &lt; 2; h++)
    {
        for (var l = 0; l &lt; array_length_2d(menu, h); l++)
        {
            draw_sprite(spr_menu_hat, menu[h, l], xpos + (xspacing * l), ypos + (yspacing * h));
        }
    }
    
    //Draw selection box
    draw_sprite(spr_menu_hat_selected, 0, xpos + (xspacing * mposx), ypos + (yspacing * mposy));
    
    //Draw chosen outline
    if (global.hat &lt; 6)
    {
        var hat_x, hat_y;
        if (global.hat &gt; 2) hat_x = global.hat - 3;
        else hat_x = global.hat;
        if (global.hat &gt; 2) hat_y = 1;
        else hat_y = 0;
        draw_sprite(spr_menu_hat_chosen, 0, xpos + (xspacing * hat_x), ypos + (yspacing * hat_y));
    }
    
    ///Draw arrow
    draw_sprite(spr_menu_arrow, 0, xpos + xspacing + 70, ypos + 358);
}

if (mposy &gt;= 2)
{
    ///Draw hat array
    for (var h = 0; h &lt; 2; h++)
    {
        for (var l = 0; l &lt; array_length_2d(menu, h); l++)
        {
            draw_sprite(spr_menu_hat, menu[h + 2, l], xpos + (xspacing * l), ypos2 + (yspacing * h));
        }
    }
    
    //Draw selection box
    draw_sprite(spr_menu_hat_selected, 0, xpos + (xspacing * mposx), ypos2 + (yspacing * (mposy - 2)));
    
    //Draw chosen outline
    if (global.hat &gt;= 6)
    {
        var hat_x, hat_y;
        if (global.hat &gt; 8) hat_x = global.hat - 9;
        else hat_x = global.hat - 6;
        if (global.hat &gt; 8) hat_y = 1;
        else hat_y = 0;
        draw_sprite(spr_menu_hat_chosen, 0, xpos + (xspacing * hat_x), ypos2 + (yspacing * hat_y));
    }
    
    ///Draw arrow
    draw_sprite_ext(spr_menu_arrow, 0, xpos + xspacing + 70, ypos + 28, 1, 1, 180, c_white, 1);
}

//Draw extra stuff
draw_set_color(c_white);
draw_line_width(512, 130, 512, 572, 10);

//Draw description
draw_set_halign(fa_left);
draw_set_valign(fa_top);
draw_set_font(fnt_ach1);
switch(mpos)
{
    case 0:
    {
        draw_set_color(c_black);
        draw_text(desc1_x, desc1_y, "Locked");
        scr_achievement_locked();
        break;
    }
    
    case 1:
    {
        scr_achievement_graphics();
        draw_set_color(c_black);
        draw_text(desc1_x, desc1_y, "None");
        draw_set_font(fnt_ach2);
        draw_set_color(c_white);
        draw_text(desc1_x, desc2_y, "No hat");
        //draw_text(desc1_x, desc3_y, "Null");
        draw_set_font(fnt_ach3);
        draw_text(desc2_x, desc4_y, "Sometimes, the best#accessory is none. For#those who have nothing,#or those who wish not to#show it.");
        break;
    }
    
    case 2:
    {
        scr_achievement_graphics();
        draw_set_color(c_black);
        draw_text(desc1_x, desc1_y, "Combo Novice");
        draw_set_font(fnt_ach2);
        draw_set_color(c_white);
        draw_text(desc1_x, desc2_y, "Bronze Crown");
        draw_text(desc1_x, desc3_y, "Reach a 10x combo");
        draw_set_font(fnt_ach3);
        draw_text(desc2_x, desc4_y, "Combos are an art form.#Many shooters learn this#as their first lesson.");
        break;
    }
    
    case 3:
    {
        scr_achievement_graphics();
        draw_set_color(c_black);
        draw_text(desc1_x, desc1_y, "Combo Proficient");
        draw_set_font(fnt_ach2);
        draw_set_color(c_white);
        draw_text(desc1_x, desc2_y, "Silver Crown");
        draw_text(desc1_x, desc3_y, "Reach a 25x combo");
        draw_set_font(fnt_ach3);
        draw_text(desc2_x, desc4_y, "Becoming a distinguished#shooter can often take#a block's lifetime.#However, you've proven#yourself skilled at#the fundamentals.");
        break;
    }
    
    case 4:
    {
        scr_achievement_graphics();
        draw_set_color(c_black);
        draw_text(desc1_x, desc1_y, "Combo Master");
        draw_set_font(fnt_ach2);
        draw_set_color(c_white);
        draw_text(desc1_x, desc2_y, "Gold Crown");
        draw_text(desc1_x, desc3_y, "Reach a 100x combo");
        draw_set_font(fnt_ach3);
        draw_text(desc2_x, desc4_y, "For the truly practiced#in their combo powers, the#golden crown is donned by#shooters with a keen eye#and trained aim.");
        break;
    }
    
    case 5:
    {
        scr_achievement_graphics();
        draw_set_color(c_black);
        draw_text(desc1_x, desc1_y, "Free Kill");
        draw_set_font(fnt_ach2);
        draw_set_color(c_white);
        draw_text(desc1_x, desc2_y, "Dunce Cap");
        draw_text(desc1_x, desc3_y, "Die with 0 points");
        draw_set_font(fnt_ach3);
        draw_text(desc2_x, desc4_y, "How'd you manage that?");
        break;
    }
    
    case 6:
    {
        scr_achievement_graphics();
        draw_set_color(c_black);
        draw_text(desc1_x, desc1_y, "Where's The Box");
        draw_set_font(fnt_ach2);
        draw_set_color(c_white);
        draw_text(desc1_x, desc2_y, "Question Mark");
        draw_text(desc1_x, desc3_y, "Reload 3 times in a row");
        draw_set_font(fnt_ach3);
        draw_text(desc2_x, desc4_y, "Masters of improvisation,#shooters sometimes just#don't have the tools.#Besides, legends tell of#a time when they only had#a pistol to their name.");
        break;
    }
    
    case 7:
    {
        scr_achievement_graphics();
        draw_set_color(c_black);
        draw_text(desc1_x, desc1_y, "Line 'em Up");
        draw_set_font(fnt_ach2);
        draw_set_color(c_white);
        draw_text(desc1_x, desc2_y, "Cowboy Hat");
        draw_text(desc1_x, desc3_y, "Get a triple collateral");
        draw_set_font(fnt_ach3);
        draw_text(desc2_x, desc4_y, "In ancient times, revolvers#would actually leave#explosive trails in their#wake. Though these times#have passed, many shooters#still love the gun.");
        break;
    }
    
    case 8:
    {
        scr_achievement_graphics();
        draw_set_color(c_black);
        draw_text(desc1_x, desc1_y, "Feline Reflexes");
        draw_set_font(fnt_ach2);
        draw_set_color(c_white);
        draw_text(desc1_x, desc2_y, "Cat Ears");
        draw_text(desc1_x, desc3_y, "Dodge a near-miss");
        draw_set_font(fnt_ach3);
        draw_text(desc2_x, desc4_y, "The Crafter Block said#he modeled these after#Keidran, whatever those#are.");
        break;
    }
    
    case 9:
    {
        scr_achievement_graphics();
        draw_set_color(c_black);
        draw_text(desc1_x, desc1_y, "Airshot");
        draw_set_font(fnt_ach2);
        draw_set_color(c_white);
        draw_text(desc1_x, desc2_y, "Soldier Helmet");
        draw_text(desc1_x, desc3_y, "Airshot an enemy");
        draw_set_font(fnt_ach3);
        draw_text(desc2_x, desc4_y, "Long ago, the Boomzooka#fired no projectiles.#It wasn't until Crafter#Euchre utilized the gun's#force for propulsion that#rockets were used.");
        break;
    }
    
    case 10:
    {
        scr_achievement_graphics();
        draw_set_color(c_black);
        draw_text(desc1_x, desc1_y, "Focus");
        draw_set_font(fnt_ach2);
        draw_set_color(c_white);
        draw_text(desc1_x, desc2_y, "Bowler Hat");
        draw_text(desc1_x, desc3_y, "Stick an offscreen enemy");
        draw_set_font(fnt_ach3);
        draw_text(desc2_x, desc4_y, "Before the invention of#firearms, crafter blocks#would use anything at#their disposal for#weapons.");
        break;
    }
    
    case 11:
    {
        scr_achievement_graphics();
        draw_set_color(c_black);
        draw_text(desc1_x, desc1_y, "Spray 'n' Pray");
        draw_set_font(fnt_ach2);
        draw_set_color(c_white);
        draw_text(desc1_x, desc2_y, "Ammo Crown");
        draw_text(desc1_x, desc3_y, "Don't Release the Spingun trigger");
        draw_set_font(fnt_ach3);
        draw_text(desc2_x, desc4_y, "Wheeee!");
        break;
    }
    
    case 12:
    {
        draw_sprite(spr_player, 1, desc1_x + 16, sprite_y + 16);
        draw_sprite(spr_gun, 0, desc1_x + 56, sprite_y + 16);
        draw_rectangle_color(desc1_x, 358, desc1_x + 465, 544, c_ltgray, c_ltgray, c_gray, c_gray, false);
        draw_set_color(c_black);
        draw_rectangle(desc1_x, 358, desc1_x + 465, 544, true);
        draw_set_color(c_black);
        draw_text(desc1_x, desc1_y, "Survivalist");
        draw_set_font(fnt_ach2);
        draw_set_color(c_white);
        draw_text(desc1_x, desc2_y, "???");
        draw_text(desc1_x, desc3_y, "Survive to wave 15");
        draw_set_font(fnt_ach3);
        draw_text(desc2_x, desc4_y, "Genetic modification has#changed shooters over#time. Some say long ago,#they looked like this.");
        break;
    }
}
</string>
          </argument>
        </arguments>
      </action>
    </event>
  </events>
  <PhysicsObject>0</PhysicsObject>
  <PhysicsObjectSensor>0</PhysicsObjectSensor>
  <PhysicsObjectShape>0</PhysicsObjectShape>
  <PhysicsObjectDensity>0.5</PhysicsObjectDensity>
  <PhysicsObjectRestitution>0.100000001490116</PhysicsObjectRestitution>
  <PhysicsObjectGroup>0</PhysicsObjectGroup>
  <PhysicsObjectLinearDamping>0.100000001490116</PhysicsObjectLinearDamping>
  <PhysicsObjectAngularDamping>0.100000001490116</PhysicsObjectAngularDamping>
  <PhysicsObjectFriction>0.200000002980232</PhysicsObjectFriction>
  <PhysicsObjectAwake>-1</PhysicsObjectAwake>
  <PhysicsObjectKinematic>0</PhysicsObjectKinematic>
  <PhysicsShapePoints/>
</object>
