<!--This Document is generated by GameMaker, if you edit it by hand then you do so at your own risk!-->
<object>
  <spriteName>&lt;undefined&gt;</spriteName>
  <solid>0</solid>
  <visible>-1</visible>
  <depth>0</depth>
  <persistent>0</persistent>
  <parentName>&lt;undefined&gt;</parentName>
  <maskName>&lt;undefined&gt;</maskName>
  <events>
    <event eventtype="0" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>///Initialize variables
menu[0] = "Music";
menu[1] = "Reset Highscores";
menu[2] = "Reset Achievements";
menu[3] = "Back";

mpos = 0;
ypos = 140;
xspacing = view_wview/2;
yspacing = 110;

bar_ypos = 220;
bar_t = 30;

mpos2 = 1;
score_r = 0;
ach_r = 0;
yspacing_b = view_hview/2;
reset_s[0] = "Yes";
reset_s[1] = "No";
reset_a[0] = "Yes";
reset_a[1] = "No";
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="3" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>///Move around the menu
scr_getinputs();
if (score_r == 0 &amp;&amp; ach_r == 0)
{
    var move = 0;
    move -= key_menu_up;
    move += key_menu_down;
    
    if (move != 0)
    {
        mpos += move;
        if (mpos &lt; 0) mpos = array_length_1d(menu) - 1;
        if (mpos &gt; array_length_1d(menu) - 1) mpos = 0;
    }
    
    if (key_menu_confirm == 1) scr_options();
    if (key_menu_deny == 1) room_goto(rm_extras);
    
    var slide = 0;
    slide -= key_menu_left;
    slide += key_menu_right;
    if (mpos == 0 &amp;&amp; slide != 0) 
    {
        global.music_gain += slide * 0.1;
        global.music_gain = max(global.music_gain, 0);
        global.music_gain = min(1, global.music_gain);
    }
}

else if (score_r == 1)
{
    var slide = 0;
    slide -= key_menu_left;
    slide += key_menu_right;
    
    if (slide != 0)
    {
        mpos2 += slide;
        if (mpos2 &lt; 0) mpos2 = array_length_1d(reset_s) - 1;
        if (mpos2 &gt; array_length_1d(reset_s) - 1) mpos2 = 0;
    }
    
    if (key_menu_confirm == 1) scr_erasescores();
    if (key_menu_deny == 1)
    {
        score_r = 0;
        mpos2 = 1;
    }
}

else if (ach_r == 1)
{
    var slide = 0;
    slide -= key_menu_left;
    slide += key_menu_right;
    
    if (slide != 0)
    {
        mpos2 += slide;
        if (mpos2 &lt; 0) mpos2 = array_length_1d(reset_a) - 1;
        if (mpos2 &gt; array_length_1d(reset_a) - 1) mpos2 = 0;
    }
    
    if (key_menu_confirm == 1) scr_eraseachievements();
    if (key_menu_deny == 1) 
    {
        ach_r = 0;
        mpos2 = 1;
    }
}
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="8" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>//Music bar
draw_set_color(c_white);
draw_set_alpha(0.5);
draw_line_width(xspacing - 100, bar_ypos, xspacing + 100, bar_ypos, bar_t);
draw_set_alpha(1);
draw_line_width(xspacing - 100, bar_ypos, xspacing - 100 + (global.music_gain * 200), bar_ypos, bar_t);

//Font settings
draw_set_color(c_white);
draw_set_font(fnt_credits);
draw_set_halign(fa_middle);
draw_set_valign(fa_top);

//Debug stuff
//draw_text(100, 100, string(global.music_gain));

var m;
switch (mpos)
{
    case 0:
    {
        scr_options_text();
        menu[0] = "&gt;Music";
        for (m = 0; m &lt; array_length_1d(menu); m++)
        {
            draw_text(xspacing, ypos + m * yspacing, string(menu[m]));
        }
    }
    break;
    
    case 1:
    {
        scr_options_text();
        menu[1] = "&gt;Reset Highscores";
        for (m = 0; m &lt; array_length_1d(menu); m++)
        {
            draw_text(xspacing, ypos + m * yspacing, string(menu[m]));
        }
    }
    break;
    
    case 2:
    {
        scr_options_text();
        menu[2] = "&gt;Reset Achievements";
        for (m = 0; m &lt; array_length_1d(menu); m++)
        {
            draw_text(xspacing, ypos + m * yspacing, string(menu[m]));
        }
    }
    break;
    
    case 3:
    {
        scr_options_text();
        menu[3] = "&gt;Back";
        for (m = 0; m &lt; array_length_1d(menu); m++)
        {
            draw_text(xspacing, ypos + m * yspacing, string(menu[m]));
        }
    }
    break;
}

if (score_r == 1 || ach_r == 1)
{
    draw_rectangle_color(xspacing - 250, yspacing_b - 100, xspacing + 250, yspacing_b + 150,
    c_ltgray, c_ltgray, c_gray, c_gray, false);
    draw_set_color(c_black);
    draw_rectangle(xspacing - 250, yspacing_b - 100, xspacing + 250, yspacing_b + 150, true);
    draw_set_color(c_white);
    if (score_r == 1) draw_text(xspacing, yspacing_b - 80, "Erase#Highscores?");
    else if (ach_r == 1) draw_text(xspacing, yspacing_b - 80, "Erase#Achievements?");
    
    var n;
    switch(mpos2)
    {
        case 0:
        scr_erase_text();
        reset_s[0] = "&gt;Yes";
        for (n = 0; n &lt; array_length_1d(reset_s); n++)
        {
            draw_text(xspacing - 100 + (200 * n), yspacing_b + 80, string(reset_s[n]));
        }
        break;
        
        case 1:
        scr_erase_text();
        reset_s[1] = "&gt;No";
        for (n = 0; n &lt; array_length_1d(reset_s); n++)
        {
            draw_text(xspacing - 100 + (200 * n), yspacing_b + 80, string(reset_s[n]));
        }
        break;
    }
}
</string>
          </argument>
        </arguments>
      </action>
    </event>
  </events>
  <PhysicsObject>0</PhysicsObject>
  <PhysicsObjectSensor>0</PhysicsObjectSensor>
  <PhysicsObjectShape>0</PhysicsObjectShape>
  <PhysicsObjectDensity>0.5</PhysicsObjectDensity>
  <PhysicsObjectRestitution>0.100000001490116</PhysicsObjectRestitution>
  <PhysicsObjectGroup>0</PhysicsObjectGroup>
  <PhysicsObjectLinearDamping>0.100000001490116</PhysicsObjectLinearDamping>
  <PhysicsObjectAngularDamping>0.100000001490116</PhysicsObjectAngularDamping>
  <PhysicsObjectFriction>0.200000002980232</PhysicsObjectFriction>
  <PhysicsObjectAwake>-1</PhysicsObjectAwake>
  <PhysicsObjectKinematic>0</PhysicsObjectKinematic>
  <PhysicsShapePoints/>
</object>
