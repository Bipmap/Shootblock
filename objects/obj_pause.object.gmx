<!--This Document is generated by GameMaker, if you edit it by hand then you do so at your own risk!-->
<object>
  <spriteName>&lt;undefined&gt;</spriteName>
  <solid>0</solid>
  <visible>-1</visible>
  <depth>0</depth>
  <persistent>0</persistent>
  <parentName>&lt;undefined&gt;</parentName>
  <maskName>&lt;undefined&gt;</maskName>
  <events>
    <event eventtype="0" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>menu[0] = "Continue";
menu[1] = "Exit";
yspacing = 35;
mpos = 0;
pause = 0;
obj[0] = obj_player;
obj[1] = obj_enemy;
obj[2] = obj_combo;
obj[3] = obj_music;
obj[4] = obj_pistol;
obj[5] = obj_cursor;
obj[6] = obj_camera;
obj[7] = obj_enemy_inactive;
obj[8] = obj_gun_enemy;
obj[9] = obj_bullet_enemy;
obj[10] = obj_aim;
obj[11] = obj_enemy_death;
obj[12] = obj_enemy_death_inactive;
obj[13] = obj_spawner_inactive;
obj[14] = obj_timer;
obj[15] = obj_bullet;
obj[16] = obj_rocket;
obj[17] = obj_explosion;
obj[18] = obj_explosion_small;
obj[19] = obj_bullet_shotgun;
obj[20] = obj_bullet_smg;
obj[21] = obj_spingun_chamber;
obj[22] = obj_zooka;
obj[23] = obj_smg;
obj[24] = obj_revolver;
obj[25] = obj_spingun;
obj[26] = obj_shotgun;
obj[27] = obj_bullet_revolver;
obj[28] = obj_spawner_crates;
obj[29] = obj_box_weapon;
obj[30] = obj_mine;
obj[31] = obj_landmines;
obj[32] = obj_explosion_mine;
obj[33] = obj_slowmo;
obj[34] = obj_rivetgun;
obj[35] = obj_rivetgun_trail;
obj[36] = obj_bullet_rivetgun;
obj[37] = obj_hat;
obj[38] = obj_tracker;
obj[39] = obj_launcher;
obj[40] = obj_bullet_launcher;
obj[41] = obj_shrapnel;
obj[42] = obj_reload;
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="3" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>if (pause)
{
    scr_getinputs();
    var move = 0;
    move -= key_menu_up;
    move += key_menu_down;
    
    if (move != 0)
    {
        mpos += move;
        if (mpos &lt; 0) mpos = array_length_1d(menu) - 1;
        if (mpos &gt; array_length_1d(menu) - 1) mpos = 0;
    }
    
    if (key_menu_confirm == 1) scr_pause();
}
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="8" enumb="73">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>if (pause)
{
    xpos = view_xview + view_wview/2;
    ypos = view_yview + view_hview/2;
    draw_set_color(c_black);
    draw_set_alpha(0.5);
    draw_rectangle(0, 0, room_width, room_height, 0);
    draw_set_alpha(1);
    draw_set_font(fnt_menu);
    draw_set_halign(fa_center);
    draw_set_valign(fa_middle);
    draw_set_color(c_white);
    draw_text(xpos, ypos - 60, "Paused");
    draw_set_font(fnt_normal);
    
    var m;
    switch (mpos)
    {
        case 0:
        {
            scr_pause_text();
            menu[0] = "&gt;Continue";
            for (m = 0; m &lt; array_length_1d(menu); m++)
            {
                draw_text(xpos, ypos + (m * yspacing), string(menu[m]));
            }
        }
        break;
        
        case 1:
        {
            scr_pause_text();
            menu[1] = "&gt;Exit";
            for (m = 0; m &lt; array_length_1d(menu); m++)
            {
                draw_text(xpos, ypos + (m * yspacing), string(menu[m]));
            }
        }
        break;
    }
}
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="10" enumb="27">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>pause = !pause;
if (pause)
{
    for(m = 0; m &lt; array_length_1d(obj); m++)
    {
        instance_deactivate_object(obj[m]);
    }
}
else if (!pause) instance_activate_all();
</string>
          </argument>
        </arguments>
      </action>
    </event>
  </events>
  <PhysicsObject>0</PhysicsObject>
  <PhysicsObjectSensor>0</PhysicsObjectSensor>
  <PhysicsObjectShape>0</PhysicsObjectShape>
  <PhysicsObjectDensity>0.5</PhysicsObjectDensity>
  <PhysicsObjectRestitution>0.100000001490116</PhysicsObjectRestitution>
  <PhysicsObjectGroup>0</PhysicsObjectGroup>
  <PhysicsObjectLinearDamping>0.100000001490116</PhysicsObjectLinearDamping>
  <PhysicsObjectAngularDamping>0.100000001490116</PhysicsObjectAngularDamping>
  <PhysicsObjectFriction>0.200000002980232</PhysicsObjectFriction>
  <PhysicsObjectAwake>-1</PhysicsObjectAwake>
  <PhysicsObjectKinematic>0</PhysicsObjectKinematic>
  <PhysicsShapePoints/>
</object>
