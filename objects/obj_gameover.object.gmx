<!--This Document is generated by GameMaker, if you edit it by hand then you do so at your own risk!-->
<object>
  <spriteName>&lt;undefined&gt;</spriteName>
  <solid>0</solid>
  <visible>-1</visible>
  <depth>-2</depth>
  <persistent>0</persistent>
  <parentName>&lt;undefined&gt;</parentName>
  <maskName>&lt;undefined&gt;</maskName>
  <events>
    <event eventtype="0" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>/*gmsb_post = 0;
gmsb_status = "";
for(i = 0;i &lt; 6; i++) gmsb_topscores[i] = 0;
for(i = 0;i &lt; 6; i++) gmsb_topnames[i] = 0;
tagid = "58b5d9262f0b114883126142176"
highscores = 0;*/

///Initialize accuracy
if (global.total != 0)
{
    accuracy = (global.hit / global.total) * 100;
}
else accuracy = "Null";
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="7" enumb="62">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>/*var r_str = "null";
if (ds_map_find_value(async_load, "id") == gmsb_post)
   {
   if (ds_map_find_value(async_load, "status") == 0)
      {
      r_str = ds_map_find_value(async_load, "result");
      }
   }

//shows the json string delivered by the server, status contains errors or shows Success
//show_message(r_str);

//first decode the json string, 
//then you can get each variable by name just like gmsb_status below.
var gmsb_map = json_decode(r_str);
gmsb_status = ds_map_find_value(gmsb_map, "status");

var i;
for(i = 0; i &lt; array_length_1d(gmsb_topscores) - 1; i++)
{
    gmsb_topscores[i] = ds_map_find_value(gmsb_map, "s" + string(i + 1));
}

var n;
for(n = 0; n &lt; array_length_1d(gmsb_topnames) - 1; n++)
{
    gmsb_topnames[n] = ds_map_find_value(gmsb_map, "p" + string(n + 1));
}
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="8" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>draw_set_font(fnt_menu);
draw_set_color(c_white);
draw_set_halign(fa_center);
draw_set_valign(fa_middle);

draw_text(view_xview + view_wview/2, view_yview + view_hview/2 - 30, "You dead");

draw_set_font(fnt_normal);

draw_text(view_xview + view_wview/2, view_yview + view_hview/2 + 10, "R to restart");
draw_text(view_xview + view_wview/2, view_yview + view_hview/2 + 30, "ESC to exit");

//Draw top combo
draw_set_color(c_white);
draw_set_halign(fa_right);
draw_set_valign(fa_middle);
draw_text(view_xview + 1000, view_yview + 480, "Top combo:");
draw_set_font(fnt_combo);
draw_text(view_xview + 1000, view_yview + 530, string(obj_combo.topcombo));

//Draw accuracy
draw_set_font(fnt_normal);
draw_set_color(c_white);
draw_set_halign(fa_right);
draw_set_valign(fa_middle);
draw_text(view_xview + 1000, view_yview + 400, "Accuracy:");
draw_set_font(fnt_accuracy);
draw_text(view_xview + 1000, view_yview + 435, "%" + string(accuracy));

/*
draw_text(view_xview + view_wview/2, view_yview + view_hview/2 + 55, "Enter to upload score");
draw_text(view_xview + view_wview/2, view_yview + view_hview/2 + 210, string(gmsb_status));

draw_text(view_xview + view_wview/2, view_yview + view_hview/2 + 100, "Space to view highscores");

//Draw top scores and names
if (highscores)
{
    //Draw backdrop
    draw_set_color(c_black);
    draw_set_alpha(0.5);
    draw_rectangle(view_xview + view_wview*3/4 - 100, view_yview + view_hview/2 - 120,
    view_xview + view_wview*3/4 + 100, view_yview + view_hview/2 + 100, 0);
    draw_rectangle(view_xview + view_wview/4 - 100, view_yview + view_hview/2 - 120,
    view_xview + view_wview/4 + 100, view_yview + view_hview/2 + 100, 0);
    draw_set_alpha(1);
    
    //Draw scores
    draw_set_font(fnt_normal);
    draw_set_color(c_white);
    draw_set_halign(fa_center);
    draw_set_valign(fa_middle);
    
    draw_text(view_xview + view_wview*3/4, view_yview + view_hview/2 - 100, "Top scores:");
    
    var s;
    for (s = 0; s &lt; 6; s += 1)
    {
    draw_text(view_xview + view_wview*3/4, view_yview + view_hview/2 - 60 + s*25, string(gmsb_topscores[s]));
    }
    
    //Draw names    
    draw_text(view_xview + view_wview/4, view_yview + view_hview/2 - 100, "Top players:");
    var s;
    for (s = 0; s &lt; 6; s += 1)
    {
    draw_text(view_xview + view_wview/4, view_yview + view_hview/2 - 60 + s*25, string(gmsb_topnames[s]));
    }
}
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="9" enumb="27">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>room_goto(rm_menu);
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="9" enumb="13">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>/*//popup to enter a name
var player_name = get_string("Type a player name:","");

//popup to enter a score
var player_score = global.submit;

//send the name and score to gmscoreboard.com
gmsb_post = http_post_string("http://gmscoreboard.com/handle_score.php?tagid="+string(tagid)+
"&amp;player="+string(player_name)+
"&amp;score="+string(player_score),"");
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="10" enumb="82">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>room_restart();
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="10" enumb="32">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>/*//Delete topscore object
with (obj_highscore_draw) instance_destroy();
with (obj_topwave_draw) instance_destroy();

//How many scores to get, maximum 10
var getscore = 6;

//Ask for the scores, this is picked up in the HTTP event
gmsb_post = http_post_string("http://gmscoreboard.com/handle_score.php?tagid="+string(tagid)+"&amp;getscore="+string(getscore),"");

//Switch highscores to 1
highscores = 1;
</string>
          </argument>
        </arguments>
      </action>
    </event>
  </events>
  <PhysicsObject>0</PhysicsObject>
  <PhysicsObjectSensor>0</PhysicsObjectSensor>
  <PhysicsObjectShape>0</PhysicsObjectShape>
  <PhysicsObjectDensity>0.5</PhysicsObjectDensity>
  <PhysicsObjectRestitution>0.100000001490116</PhysicsObjectRestitution>
  <PhysicsObjectGroup>0</PhysicsObjectGroup>
  <PhysicsObjectLinearDamping>0.100000001490116</PhysicsObjectLinearDamping>
  <PhysicsObjectAngularDamping>0.100000001490116</PhysicsObjectAngularDamping>
  <PhysicsObjectFriction>0.200000002980232</PhysicsObjectFriction>
  <PhysicsObjectAwake>-1</PhysicsObjectAwake>
  <PhysicsObjectKinematic>0</PhysicsObjectKinematic>
  <PhysicsShapePoints/>
</object>
