<!--This Document is generated by GameMaker, if you edit it by hand then you do so at your own risk!-->
<object>
  <spriteName>spr_smg</spriteName>
  <solid>0</solid>
  <visible>-1</visible>
  <depth>-1</depth>
  <persistent>0</persistent>
  <parentName>&lt;undefined&gt;</parentName>
  <maskName>&lt;undefined&gt;</maskName>
  <events>
    <event eventtype="0" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>///Load gun
ammocount = 30;
canshoot = true;
reloading = false;
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="2" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>///Allow refire
canshoot = true;
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="3" enumb="2">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>///Flip sprite
if ((direction &gt; 90) &amp;&amp; (direction &lt; 270)) 
{
    image_yscale = -1; 
}
else 
{
    image_yscale = 1;
}
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="3" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>///Aim and fire
//Aim gun
x = obj_player.x;
y = obj_player.y;
move_towards_point(obj_cursor.x,obj_cursor.y,0);
image_angle = direction;
var xbuff = lengthdir_x(10, direction);
var ybuff = lengthdir_y(20, direction);
x += xbuff;
y += ybuff;

//Fire gun
scr_getinputs();
if (mouse_left_p) scr_smg_shoot();

//Delete empty gun
if (ammocount == 0) scr_pistol_initialize(); 
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="8" enumb="73">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>///Draw ammo
xspacing = (view_xview + 30);
yspacing = (view_yview + 500);
sprite = spr_smg_ammo;

switch (ammocount)
{
    case 30: draw_sprite(sprite, 29, xspacing, yspacing);
    break;
    
    case 29: draw_sprite(sprite, 28, xspacing, yspacing);
    break;
    
    case 28: draw_sprite(sprite, 27, xspacing, yspacing);
    break;
    
    case 27: draw_sprite(sprite, 26, xspacing, yspacing);
    break;
    
    case 26: draw_sprite(sprite, 25, xspacing, yspacing);
    break;
    
    case 25: draw_sprite(sprite, 24, xspacing, yspacing);
    break;
    
    case 24: draw_sprite(sprite, 23, xspacing, yspacing);
    break;
    
    case 23: draw_sprite(sprite, 22, xspacing, yspacing);
    break;
    
    case 22: draw_sprite(sprite, 21, xspacing, yspacing);
    break;
    
    case 21: draw_sprite(sprite, 20, xspacing, yspacing);
    break;
    
    case 20: draw_sprite(sprite, 19, xspacing, yspacing);
    break;
    
    case 19: draw_sprite(sprite, 18, xspacing, yspacing);
    break;
    
    case 18: draw_sprite(sprite, 17, xspacing, yspacing);
    break;
    
    case 17: draw_sprite(sprite, 16, xspacing, yspacing);
    break;
    
    case 16: draw_sprite(sprite, 15, xspacing, yspacing);
    break;
    
    case 15: draw_sprite(sprite, 14, xspacing, yspacing);
    break;
    
    case 14: draw_sprite(sprite, 13, xspacing, yspacing);
    break;
    
    case 13: draw_sprite(sprite, 12, xspacing, yspacing);
    break;
    
    case 12: draw_sprite(sprite, 11, xspacing, yspacing);
    break;
    
    case 11: draw_sprite(sprite, 10, xspacing, yspacing);
    break;
    
    case 10: draw_sprite(sprite, 9, xspacing, yspacing);
    break;
    
    case 9: draw_sprite(sprite, 8, xspacing, yspacing);
    break;
    
    case 8: draw_sprite(sprite, 7, xspacing, yspacing);
    break;
    
    case 7: draw_sprite(sprite, 6, xspacing, yspacing);
    break;
    
    case 6: draw_sprite(sprite, 5, xspacing, yspacing);
    break;
    
    case 5: draw_sprite(sprite, 4, xspacing, yspacing);
    break;
    
    case 4: draw_sprite(sprite, 3, xspacing, yspacing);
    break;
    
    case 3: draw_sprite(sprite, 2, xspacing, yspacing);
    break;
    
    case 2: draw_sprite(sprite, 1, xspacing, yspacing);
    break;
    
    case 1: draw_sprite(sprite, 0, xspacing, yspacing);
    break;
}
</string>
          </argument>
        </arguments>
      </action>
    </event>
  </events>
  <PhysicsObject>0</PhysicsObject>
  <PhysicsObjectSensor>0</PhysicsObjectSensor>
  <PhysicsObjectShape>0</PhysicsObjectShape>
  <PhysicsObjectDensity>0.5</PhysicsObjectDensity>
  <PhysicsObjectRestitution>0.100000001490116</PhysicsObjectRestitution>
  <PhysicsObjectGroup>0</PhysicsObjectGroup>
  <PhysicsObjectLinearDamping>0.100000001490116</PhysicsObjectLinearDamping>
  <PhysicsObjectAngularDamping>0.100000001490116</PhysicsObjectAngularDamping>
  <PhysicsObjectFriction>0.200000002980232</PhysicsObjectFriction>
  <PhysicsObjectAwake>-1</PhysicsObjectAwake>
  <PhysicsObjectKinematic>0</PhysicsObjectKinematic>
  <PhysicsShapePoints/>
</object>
