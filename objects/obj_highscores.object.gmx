<!--This Document is generated by GameMaker, if you edit it by hand then you do so at your own risk!-->
<object>
  <spriteName>&lt;undefined&gt;</spriteName>
  <solid>0</solid>
  <visible>-1</visible>
  <depth>0</depth>
  <persistent>0</persistent>
  <parentName>&lt;undefined&gt;</parentName>
  <maskName>&lt;undefined&gt;</maskName>
  <events>
    <event eventtype="0" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>///Initialize variables
move = 3;
mpos = 0;
mmax = 2;
xspacing = view_wview/2;
yspacing = view_hview*(5/6);

trix = 300;
tribuff = 40;
ycorr = 22;

loading = 1;
for(i = 0;i &lt; 10; i++) gmsb_topscores[i] = 0;
for(i = 0;i &lt; 10; i++) gmsb_topnames[i] = 0;
gmsb_post = 0;
tagid[0] = "58b794449969c14884260522176"
tagid[1] = "58b79473a503814884260992176"
tagid[2] = "58b83ce397c9714884692192183"
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="3" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>///Move around the menu
scr_getinputs();
move -= key_menu_left;
move += key_menu_right;

if (move != 0)
{
    loading = 1;
    mpos += move;
    if (mpos &lt; 0) mpos = mmax;
    if (mpos &gt; mmax) mpos = 0;
    
    //Call highscore data
    //How many scores to get, maximum 10
    var getscore = 10;
    
    //Get the right level
    switch (mpos)
        {
            case 0: tagid_l = tagid[0];
            break;
            
            case 1: tagid_l = tagid[1];
            break;
            
            case 2: tagid_l = tagid[2];
            break;
        }
    
    //Ask for the scores, this is picked up in the HTTP event
    gmsb_post = http_post_string("http://gmscoreboard.com/handle_score.php?tagid="+string(tagid_l)+"&amp;getscore="+string(getscore),"");
}

move = 0;

if (key_menu_confirm == 1)
{
    room_goto(rm_levelselect);
    audio_play_sound(snd_select, 0, 0);
}
if (key_menu_deny == 1) room_goto(rm_levelselect);
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="7" enumb="62">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>var r_str = "null";
if (ds_map_find_value(async_load, "id") == gmsb_post)
   {
   if (ds_map_find_value(async_load, "status") == 0)
      {
      r_str = ds_map_find_value(async_load, "result");
      }
   }

//first decode the json string, 
//then you can get each variable by name just like gmsb_status below.
var gmsb_map = json_decode(r_str);

var i;
for(i = 0; i &lt; array_length_1d(gmsb_topscores) - 1; i++)
{
    gmsb_topscores[i] = ds_map_find_value(gmsb_map, "s" + string(i + 1));
}

var n;
for(n = 0; n &lt; array_length_1d(gmsb_topnames) - 1; n++)
{
    gmsb_topnames[n] = ds_map_find_value(gmsb_map, "p" + string(n + 1));
}

loading = 0;
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="8" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>///Draw back button and triangles
draw_set_color(c_white);
draw_set_font(fnt_menu3);
draw_set_halign(fa_center);
draw_set_valign(fa_top);

draw_text(xspacing, yspacing, "&gt;Back");
draw_triangle(xspacing - trix, yspacing + ycorr, xspacing - trix - tribuff, 
yspacing + tribuff/2 + ycorr, xspacing - trix, yspacing + tribuff + ycorr, false);
draw_triangle(xspacing + trix, yspacing + ycorr, xspacing + trix + tribuff, 
yspacing + tribuff/2 + ycorr, xspacing + trix, yspacing + tribuff + ycorr, false);

draw_set_color(c_black);
draw_set_alpha(0.5);
draw_rectangle(32, 190, 960 + 32, 465, false);
draw_set_alpha(1);

scr_highscores_title();
scr_highscores_draw();

/*switch (mpos)
{
    case 0:
    scr_highscores_title();
    scr_highscores_draw();
    break;
    
    case 1:
    scr_highscores_title();
    scr_highscores_draw();
    break;
    
    case 2:
    scr_highscores_title();
    scr_highscores_draw();
    break;
}
</string>
          </argument>
        </arguments>
      </action>
    </event>
  </events>
  <PhysicsObject>0</PhysicsObject>
  <PhysicsObjectSensor>0</PhysicsObjectSensor>
  <PhysicsObjectShape>0</PhysicsObjectShape>
  <PhysicsObjectDensity>0.5</PhysicsObjectDensity>
  <PhysicsObjectRestitution>0.100000001490116</PhysicsObjectRestitution>
  <PhysicsObjectGroup>0</PhysicsObjectGroup>
  <PhysicsObjectLinearDamping>0.100000001490116</PhysicsObjectLinearDamping>
  <PhysicsObjectAngularDamping>0.100000001490116</PhysicsObjectAngularDamping>
  <PhysicsObjectFriction>0.200000002980232</PhysicsObjectFriction>
  <PhysicsObjectAwake>-1</PhysicsObjectAwake>
  <PhysicsObjectKinematic>0</PhysicsObjectKinematic>
  <PhysicsShapePoints/>
</object>
